[ 2024-11-16 19:59:41,505 ] 23 root - INFO - Logger initialized successfully. 
[ 2024-11-16 19:59:45,455 ] 25 root - INFO - Data Ingestion Method start 
[ 2024-11-16 19:59:45,600 ] 29 root - INFO - Dataset read as pandas DtaaFrames 
[ 2024-11-16 19:59:46,281 ] 35 root - INFO - train test split 
[ 2024-11-16 19:59:46,996 ] 42 root - INFO - Ingestion of data is complete 
[ 2024-11-16 19:59:47,136 ] 71 root - INFO - Read train and test data completed 
[ 2024-11-16 19:59:47,140 ] 73 root - INFO - Train Dataframe Head: 
       id  carat        cut color clarity  depth  table     x     y     z  price
0   11504   0.41      Ideal     E    VVS2   60.6   56.0  4.85  4.80  2.93   1181
1   95284   1.23  Very Good     H     VS1   59.9   59.0  6.91  7.01  4.19   7418
2  184777   1.70    Premium     H     VS2   62.0   58.0  7.61  7.66  4.74  12755
3    5419   0.33      Ideal     F    VVS1   61.2   56.0  4.47  4.44  2.73   1020
4   45466   0.33  Very Good     I     SI1   62.1   58.0  4.41  4.45  2.75    445 
[ 2024-11-16 19:59:47,171 ] 74 root - INFO - Test Dataframe Head: 
       id  carat        cut color clarity  depth  table     x     y     z  price
0   14868   0.50      Ideal     D     SI1   62.1   57.0  5.05  5.08  3.14   1355
1  165613   2.00  Very Good     G     SI2   59.5   57.0  8.08  8.15  4.89  14691
2   96727   0.27    Premium     E    VVS1   60.5   59.0  4.19  4.16  2.52    844
3  145593   0.32    Premium     I    VVS1   61.2   59.0  4.43  4.44  2.71    707
4  118689   1.19      Ideal     H     SI1   62.5   56.0  6.77  6.81  4.23   5797 
[ 2024-11-16 19:59:47,171 ] 25 root - INFO - Data Transformation initiated 
[ 2024-11-16 19:59:47,171 ] 36 root - INFO - Pipeline Initiated 
[ 2024-11-16 19:59:47,171 ] 57 root - INFO - Data Transformation object created successfully 
[ 2024-11-16 19:59:47,387 ] 93 root - INFO - Applying preprocessing object on training and testing datasets. 
[ 2024-11-16 19:59:47,391 ] 15 root - INFO - Saving object to artifacts\preprocessor.pkl 
[ 2024-11-16 19:59:47,401 ] 16 root - INFO - Object to be saved: ColumnTransformer(transformers=[('num_pipeline',
                                 Pipeline(steps=[('imputer',
                                                  SimpleImputer(strategy='median')),
                                                 ('scaler', StandardScaler())]),
                                 ['carat', 'depth', 'table', 'x', 'y', 'z']),
                                ('cat_pipeline',
                                 Pipeline(steps=[('imputer',
                                                  SimpleImputer(strategy='most_frequent')),
                                                 ('ordinalencoder',
                                                  OrdinalEncoder(categories=[['Fair',
                                                                              'Good',
                                                                              'Very '
                                                                              'Good',
                                                                              'Premium',
                                                                              'Ideal'],
                                                                             ['D',
                                                                              'E',
                                                                              'F',
                                                                              'G',
                                                                              'H',
                                                                              'I',
                                                                              'J'],
                                                                             ['I1',
                                                                              'SI2',
                                                                              'SI1',
                                                                              'VS2',
                                                                              'VS1',
                                                                              'VVS2',
                                                                              'VVS1',
                                                                              'IF']])),
                                                 ('scaler', StandardScaler())]),
                                 ['cut', 'color', 'clarity'])]) 
[ 2024-11-16 19:59:47,401 ] 21 root - INFO - Object saved successfully to artifacts\preprocessor.pkl 
[ 2024-11-16 19:59:47,401 ] 105 root - INFO - Preprocessor pickle file is created and saved 
[ 2024-11-16 19:59:47,405 ] 24 root - INFO - Splitting Dependent and Independent variables from train and test data 
[ 2024-11-16 20:01:25,357 ] 44 root - INFO - Model Report: {'LinearRegression': 0.9362906819996049, 'Lasso': 0.9362869814082755, 'Ridge': 0.9362900967491632, 'Elasticnet': 0.8544967219374031, 'DecisionTree': 0.9546068405870627, 'RandomForest': 0.9768567847028496} 
[ 2024-11-16 20:01:25,357 ] 51 root - INFO - Best Model Found: RandomForest, R² Score: 0.9768567847028496 
[ 2024-11-16 20:01:25,358 ] 15 root - INFO - Saving object to artifacts\model.pkl 
[ 2024-11-16 20:01:25,358 ] 16 root - INFO - Object to be saved: RandomForestRegressor() 
[ 2024-11-16 20:01:26,411 ] 21 root - INFO - Object saved successfully to artifacts\model.pkl 
[ 2024-11-16 20:01:26,411 ] 59 root - INFO - Model saved successfully to artifacts\model.pkl 
